name: Build and Publish Node.js Application

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      # Step 1: Checkout the code from the repository
      - uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Step 3: Cache node_modules to speed up builds
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      # Step 4: Install dependencies
      - run: npm ci

      # Step 5: Run tests with OpenSSL fix for Node.js 17+
      - name: Run tests
        run: NODE_OPTIONS=--openssl-legacy-provider npm test --if-present

      # Step 6: Build the application
      - name: Build the application
        run: NODE_OPTIONS=--openssl-legacy-provider npm run build --if-present

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Step 1: Checkout the code from the repository
      - uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      # Step 3: Cache node_modules to speed up builds
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      # Step 4: Install dependencies
      - run: npm ci

      # Step 5: Publish the package to GitHub Packages
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
